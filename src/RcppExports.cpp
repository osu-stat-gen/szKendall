// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// cal_weight_vec3
NumericVector cal_weight_vec3(int n);
RcppExport SEXP _szKendall_cal_weight_vec3(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(cal_weight_vec3(n));
    return rcpp_result_gen;
END_RCPP
}
// cal_weight_sz_vec3
NumericVector cal_weight_sz_vec3(int n);
RcppExport SEXP _szKendall_cal_weight_sz_vec3(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(cal_weight_sz_vec3(n));
    return rcpp_result_gen;
END_RCPP
}
// cal_weight_vec1
NumericVector cal_weight_vec1(int n);
RcppExport SEXP _szKendall_cal_weight_vec1(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(cal_weight_vec1(n));
    return rcpp_result_gen;
END_RCPP
}
// cal_weight_sz_vec1
NumericVector cal_weight_sz_vec1(int n);
RcppExport SEXP _szKendall_cal_weight_sz_vec1(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(cal_weight_sz_vec1(n));
    return rcpp_result_gen;
END_RCPP
}
// cal_weight_sz_vec2
NumericVector cal_weight_sz_vec2(int n);
RcppExport SEXP _szKendall_cal_weight_sz_vec2(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(cal_weight_sz_vec2(n));
    return rcpp_result_gen;
END_RCPP
}
// szkendall
double szkendall(NumericVector Y1, NumericVector Y2, Nullable<IntegerVector> Y1_sz_idx, Nullable<IntegerVector> Y2_sz_idx, NumericVector weight_vec, NumericVector weight_sz_vec, String type);
RcppExport SEXP _szKendall_szkendall(SEXP Y1SEXP, SEXP Y2SEXP, SEXP Y1_sz_idxSEXP, SEXP Y2_sz_idxSEXP, SEXP weight_vecSEXP, SEXP weight_sz_vecSEXP, SEXP typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Y1(Y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Y2(Y2SEXP);
    Rcpp::traits::input_parameter< Nullable<IntegerVector> >::type Y1_sz_idx(Y1_sz_idxSEXP);
    Rcpp::traits::input_parameter< Nullable<IntegerVector> >::type Y2_sz_idx(Y2_sz_idxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weight_vec(weight_vecSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weight_sz_vec(weight_sz_vecSEXP);
    Rcpp::traits::input_parameter< String >::type type(typeSEXP);
    rcpp_result_gen = Rcpp::wrap(szkendall(Y1, Y2, Y1_sz_idx, Y2_sz_idx, weight_vec, weight_sz_vec, type));
    return rcpp_result_gen;
END_RCPP
}
// szkendall1
double szkendall1(NumericVector Y1, NumericVector Y2, Nullable<IntegerVector> Y1_sz_idx, Nullable<IntegerVector> Y2_sz_idx, NumericVector weight_vec, NumericVector weight_sz_vec, String type);
RcppExport SEXP _szKendall_szkendall1(SEXP Y1SEXP, SEXP Y2SEXP, SEXP Y1_sz_idxSEXP, SEXP Y2_sz_idxSEXP, SEXP weight_vecSEXP, SEXP weight_sz_vecSEXP, SEXP typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Y1(Y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Y2(Y2SEXP);
    Rcpp::traits::input_parameter< Nullable<IntegerVector> >::type Y1_sz_idx(Y1_sz_idxSEXP);
    Rcpp::traits::input_parameter< Nullable<IntegerVector> >::type Y2_sz_idx(Y2_sz_idxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weight_vec(weight_vecSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weight_sz_vec(weight_sz_vecSEXP);
    Rcpp::traits::input_parameter< String >::type type(typeSEXP);
    rcpp_result_gen = Rcpp::wrap(szkendall1(Y1, Y2, Y1_sz_idx, Y2_sz_idx, weight_vec, weight_sz_vec, type));
    return rcpp_result_gen;
END_RCPP
}
// szkendall2
double szkendall2(NumericVector Y1, NumericVector Y2, Nullable<IntegerVector> Y1_sz_idx, Nullable<IntegerVector> Y2_sz_idx, NumericVector weight_sz_vec, String type);
RcppExport SEXP _szKendall_szkendall2(SEXP Y1SEXP, SEXP Y2SEXP, SEXP Y1_sz_idxSEXP, SEXP Y2_sz_idxSEXP, SEXP weight_sz_vecSEXP, SEXP typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Y1(Y1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Y2(Y2SEXP);
    Rcpp::traits::input_parameter< Nullable<IntegerVector> >::type Y1_sz_idx(Y1_sz_idxSEXP);
    Rcpp::traits::input_parameter< Nullable<IntegerVector> >::type Y2_sz_idx(Y2_sz_idxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weight_sz_vec(weight_sz_vecSEXP);
    Rcpp::traits::input_parameter< String >::type type(typeSEXP);
    rcpp_result_gen = Rcpp::wrap(szkendall2(Y1, Y2, Y1_sz_idx, Y2_sz_idx, weight_sz_vec, type));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_szKendall_cal_weight_vec3", (DL_FUNC) &_szKendall_cal_weight_vec3, 1},
    {"_szKendall_cal_weight_sz_vec3", (DL_FUNC) &_szKendall_cal_weight_sz_vec3, 1},
    {"_szKendall_cal_weight_vec1", (DL_FUNC) &_szKendall_cal_weight_vec1, 1},
    {"_szKendall_cal_weight_sz_vec1", (DL_FUNC) &_szKendall_cal_weight_sz_vec1, 1},
    {"_szKendall_cal_weight_sz_vec2", (DL_FUNC) &_szKendall_cal_weight_sz_vec2, 1},
    {"_szKendall_szkendall", (DL_FUNC) &_szKendall_szkendall, 7},
    {"_szKendall_szkendall1", (DL_FUNC) &_szKendall_szkendall1, 7},
    {"_szKendall_szkendall2", (DL_FUNC) &_szKendall_szkendall2, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_szKendall(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
